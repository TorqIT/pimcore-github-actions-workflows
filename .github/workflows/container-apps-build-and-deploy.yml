# Builds, tags, and pushes Pimcore Docker images to an Azure Container Registry, and deploys them to Container Apps.
#
# Requires the following permissions to be set in the callig job:
# permissions:
#   contents: read
#   actions: read

name: Build, tag, and push Docker images, and deploy to Azure Container Apps

on:
  workflow_call:
    inputs:
      RUNNER:
        required: false
        type: string
      NPM_BUILD:
        required: false
        type: boolean
      NPM_RUN_CMD:
        required: false
        type: string
      NPM_SPA:
        required: false
        type: boolean
      SPA_TWIG:
        required: false
        type: string
        default: "default/default.html.twig"
      ENVIRONMENT:
        required: true
        type: string
      SUBMODULES:
        required: false
        type: boolean
        default: false
      INIT:
        required: false
        type: boolean
        default: false
      PIMCORE_ROOT:
        required: false
        type: string
        default: "pimcore-root"
      PHP_DOCKERFILE:
        required: false
        type: string
        default: "docker/php-fpm/Dockerfile"
      PHP_DOCKER_TARGET:
        required: false
        type: string
        default: ""
      SUPERVISORD_DOCKERFILE:
        required: false
        type: string
        default: "docker/supervisord/Dockerfile"
      SUPERVISORD_TARGET:
        required: false
        type: string
        default: ""

    secrets:
      SERVICE_PRINCIPAL_ID:
        required: true
      SERVICE_PRINCIPAL_PASSWORD:
        required: true
      PIMCORE_ENTERPRISE_TOKEN:
        required: false
      ENCRYPTION_SECRET:
        required: false
      TORQ_GITHUB_TOKEN:
        required: false
      RECAPTCHA_CLIENT_KEY:
        required: false

jobs:
  build-and-push-init-image:
    if: ${{ inputs.INIT }}
    runs-on: ${{ inputs.RUNNER || 'ubuntu-latest' }}
    environment: ${{ inputs.ENVIRONMENT }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get workflow version
        id: workflow-version
        uses: canonical/get-workflow-version-action@v1
        with:
          repository-name: TorqIT/pimcore-github-actions-workflows
          file-name: container-apps-build-and-deploy.yml
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout workflow repository to use composite actions
        uses: actions/checkout@v4
        with:
          repository: TorqIT/pimcore-github-actions-workflows
          ref: ${{ steps.workflow-version.outputs.sha }}
          path: reusable-workflow
          fetch-depth: 1

      - uses: ./reusable-workflow/.github/actions/container-apps-copy-config
        with:
          PIMCORE_ROOT: ${{ inputs.PIMCORE_ROOT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: ./reusable-workflow/.github/actions/build-and-push-pimcore-image
        with:
          CONTAINER_REGISTRY_USERNAME: ${{ secrets.SERVICE_PRINCIPAL_ID }}
          CONTAINER_REGISTRY_PASSWORD: ${{ secrets.SERVICE_PRINCIPAL_PASSWORD }}
          DOCKERFILE_PATH: ./.docker/Dockerfile
          DOCKERFILE_TARGET: init
          PIMCORE_ENTERPRISE_TOKEN: ${{ secrets.PIMCORE_ENTERPRISE_TOKEN }}
          TORQ_GITHUB_TOKEN: ${{ secrets.TORQ_GITHUB_TOKEN }}
          CONTAINER_REGISTRY: ${{ vars.CONTAINER_REGISTRY }}
          IMAGE: ${{ vars.INIT_IMAGE }}
          CACHE_FROM: type=gha
          CACHE_TO: type=gha,mode=max
          PIMCORE_ROOT: ${{ inputs.PIMCORE_ROOT }}

  deploy-and-run-init:
    if: ${{ inputs.INIT }}
    runs-on: ${{ inputs.RUNNER || 'ubuntu-latest' }}
    environment: ${{ inputs.ENVIRONMENT }}
    needs:
      - build-and-push-init-image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get workflow version
        id: workflow-version
        uses: canonical/get-workflow-version-action@v1
        with:
          repository-name: TorqIT/pimcore-github-actions-workflows
          file-name: container-apps-build-and-deploy.yml
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout workflow repository to use composite actions
        uses: actions/checkout@v4
        with:
          repository: TorqIT/pimcore-github-actions-workflows
          ref: ${{ steps.workflow-version.outputs.sha }}
          path: reusable-workflow
          fetch-depth: 1

      - uses: ./reusable-workflow/.github/actions/deploy-and-run-init-container-app-job
        with:
          SERVICE_PRINCIPAL_ID: ${{ secrets.SERVICE_PRINCIPAL_ID }}
          SERVICE_PRINCIPAL_PASSWORD: ${{ secrets.SERVICE_PRINCIPAL_PASSWORD }}
          INIT_CONTAINER_APP_JOB: ${{ vars.INIT_CONTAINER_APP_JOB }}
          RESOURCE_GROUP: ${{ vars.RESOURCE_GROUP }}
          CONTAINER_REGISTRY: ${{ vars.CONTAINER_REGISTRY }}

  build-and-push-php-image:
    runs-on: ${{ inputs.RUNNER || 'ubuntu-latest' }}
    environment: ${{ inputs.ENVIRONMENT }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get workflow version
        id: workflow-version
        uses: canonical/get-workflow-version-action@v1
        with:
          repository-name: TorqIT/pimcore-github-actions-workflows
          file-name: container-apps-build-and-deploy.yml
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout workflow repository to use composite actions
        uses: actions/checkout@v4
        with:
          repository: TorqIT/pimcore-github-actions-workflows
          ref: ${{ steps.workflow-version.outputs.sha }}
          path: reusable-workflow
          fetch-depth: 1

      - uses: ./reusable-workflow/.github/actions/container-apps-copy-config
        with:
          PIMCORE_ROOT: ${{ inputs.PIMCORE_ROOT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: ./reusable-workflow/.github/actions/build-and-push-pimcore-image
        with:
          DOCKERFILE_PATH: ./.docker/Dockerfile
          DOCKERFILE_TARGET: php
          PIMCORE_ENTERPRISE_TOKEN: ${{ secrets.PIMCORE_ENTERPRISE_TOKEN }}
          TORQ_GITHUB_TOKEN: ${{ secrets.TORQ_GITHUB_TOKEN }}
          CONTAINER_REGISTRY: ${{ vars.CONTAINER_REGISTRY }}
          IMAGE: ${{ vars.PHP_FPM_IMAGE }}
          CACHE_FROM: type=gha
          CACHE_TO: type=gha,mode=max
          NPM_BUILD: ${{ inputs.NPM_BUILD }}
          RECAPTCHA_CLIENT_KEY: ${{ secrets.RECAPTCHA_CLIENT_KEY }}
          NPM_SPA: ${{ inputs.NPM_SPA }}
          SPA_TWIG: ${{ inputs.SPA_TWIG }}
          PIMCORE_ROOT: ${{ inputs.PIMCORE_ROOT }}
          CONTAINER_REGISTRY_USERNAME: ${{ secrets.SERVICE_PRINCIPAL_ID }}
          CONTAINER_REGISTRY_PASSWORD: ${{ secrets.SERVICE_PRINCIPAL_PASSWORD }}
    
  deploy-php-container-app:
    runs-on: ${{ inputs.RUNNER || 'ubuntu-latest' }}
    environment: ${{ inputs.ENVIRONMENT }}
    needs:
      - deploy-and-run-init
      - build-and-push-php-image
    if: success() || failure()
    steps:
      # This is a workaround for the fact there is no way to do a conditional "needs"
      - name: Fail fast if necessary jobs failed
        if: ${{ needs.deploy-and-run-init.result == 'failure' || needs.deploy-and-run-init.result == 'cancelled' || needs.build-and-push-php-image.result == 'failure' || needs.build-and-push-php-image == 'cancelled' }}
        run: exit 1

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: ${{ inputs.SUBMODULES }}

      - name: Get workflow version
        id: workflow-version
        uses: canonical/get-workflow-version-action@v1
        with:
          repository-name: TorqIT/pimcore-github-actions-workflows
          file-name: container-apps-build-and-deploy.yml
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout workflow repository to use composite actions
        uses: actions/checkout@v4
        with:
          repository: TorqIT/pimcore-github-actions-workflows
          ref: ${{ steps.workflow-version.outputs.sha }}
          path: reusable-workflow
          fetch-depth: 1

      - uses: ./reusable-workflow/.github/actions/deploy-container-app-revision
        with:
          TENANT: ${{ vars.TENANT }}
          SERVICE_PRINCIPAL_ID: ${{ secrets.SERVICE_PRINCIPAL_ID }}
          SERVICE_PRINCIPAL_PASSWORD: ${{ secrets.SERVICE_PRINCIPAL_PASSWORD }}
          RESOURCE_GROUP: ${{ vars.RESOURCE_GROUP }}
          CONTAINER_APP: ${{ vars.PHP_FPM_CONTAINER_APP }}
          CONTAINER_REGISTRY: ${{ vars.CONTAINER_REGISTRY }}
          MULTI_REVISION: "true"

  build-and-push-supervisord-image:
    runs-on: ${{ inputs.RUNNER || 'ubuntu-latest' }}
    environment: ${{ inputs.ENVIRONMENT }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get workflow version
        id: workflow-version
        uses: canonical/get-workflow-version-action@v1
        with:
          repository-name: TorqIT/pimcore-github-actions-workflows
          file-name: container-apps-build-and-deploy.yml
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout workflow repository to use composite actions
        uses: actions/checkout@v4
        with:
          repository: TorqIT/pimcore-github-actions-workflows
          ref: ${{ steps.workflow-version.outputs.sha }}
          path: reusable-workflow
          fetch-depth: 1

      - uses: ./reusable-workflow/.github/actions/container-apps-copy-config
        with:
          PIMCORE_ROOT: ${{ inputs.PIMCORE_ROOT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: ./reusable-workflow/.github/actions/build-and-push-pimcore-image
        with:
          DOCKERFILE_PATH: ./.docker/Dockerfile
          DOCKERFILE_TARGET: supervisord
          PIMCORE_ENTERPRISE_TOKEN: ${{ secrets.PIMCORE_ENTERPRISE_TOKEN }}
          TORQ_GITHUB_TOKEN: ${{ secrets.TORQ_GITHUB_TOKEN }}
          CONTAINER_REGISTRY: ${{ vars.CONTAINER_REGISTRY }}
          IMAGE: ${{ vars.SUPERVISORD_IMAGE }}
          CACHE_FROM: type=gha
          CACHE_TO: type=gha,mode=max
          PIMCORE_ROOT: ${{ inputs.PIMCORE_ROOT }}
          CONTAINER_REGISTRY_USERNAME: ${{ secrets.SERVICE_PRINCIPAL_ID }}
          CONTAINER_REGISTRY_PASSWORD: ${{ secrets.SERVICE_PRINCIPAL_PASSWORD }}

  deploy-supervisord:
    runs-on: ${{ inputs.RUNNER || 'ubuntu-latest' }}
    environment: ${{ inputs.ENVIRONMENT }}
    needs:
      - deploy-and-run-init
      - build-and-push-supervisord-image
    steps:
      # This is a workaround for the fact there is no way to do a conditional "needs"
      - name: Fail fast if necessary jobs failed
        if: ${{ needs.deploy-and-run-init.result == 'failure' || needs.deploy-and-run-init.result == 'cancelled' || needs.build-and-push-supervisord-image.result == 'failure' || needs.build-and-push-supervisord-image.result == 'cancelled' }}
        run: exit 1

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: ${{ inputs.SUBMODULES }}

      - name: Get workflow version
        id: workflow-version
        uses: canonical/get-workflow-version-action@v1
        with:
          repository-name: TorqIT/pimcore-github-actions-workflows
          file-name: container-apps-build-and-deploy.yml
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout workflow repository to use composite actions
        uses: actions/checkout@v4
        with:
          repository: TorqIT/pimcore-github-actions-workflows
          ref: ${{ steps.workflow-version.outputs.sha }}
          path: reusable-workflow
          fetch-depth: 1

      - uses: ./reusable-workflow/.github/actions/deploy-container-app-revision
        with:
          TENANT: ${{ vars.TENANT }}
          SERVICE_PRINCIPAL_ID: ${{ secrets.SERVICE_PRINCIPAL_ID }}
          SERVICE_PRINCIPAL_PASSWORD: ${{ secrets.SERVICE_PRINCIPAL_PASSWORD }}
          RESOURCE_GROUP: ${{ vars.RESOURCE_GROUP }}
          CONTAINER_APP: ${{ vars.SUPERVISORD_CONTAINER_APP }}
          CONTAINER_REGISTRY: ${{ vars.CONTAINER_REGISTRY }}
          MULTI_REVISION: "false"