name: "Azure Apply Infrastructure Changes"
description: "Applies Azure infrastructure updates based on the given parameters file"
inputs:
  TENANT:
    required: true
    description: "ID of the Azure tenant to log in to"
  DOCKER_COMPOSE_FILE:
    required: false
    description: "Docker Compose file containing the Azure service"
  PARAMETERS_FILE:
    required: false
    description: "Azure parameters file path"
  SERVICE_PRINCIPAL_ID:
    required: true
    description: "The ID of the Service Principal in Azure that will be used to log in"
  SERVICE_PRINCIPAL_PASSWORD:
    required: true
    description: "The password for the Service Principal in Azure"
  AZURE_SERVICE:
    required: true
    description: "Name of the Azure provisioning service inside the Docker Compose file"

runs:
  using: "composite"
  steps:
    - name: Build and start container
      shell: bash
      run: |
        touch .env
        docker compose \
          --file ${{ inputs.DOCKER_COMPOSE_FILE }} \
          up -d \
          ${{ inputs.AZURE_SERVICE }}

    - name: Log in to Azure inside container
      shell: bash
      run: |
        touch .env
        TENANT=$(jq -r '.parameters.tenantId.value' ${{ inputs.PARAMETERS_FILE }}) >> .env
        SERVICE_PRINCIPAL_ID=${{ inputs.SERVICE_PRINCIPAL_ID }} >> .env
        SERVICE_PRINCIPAL_PASSWORD=${{ inputs.SERVICE_PRINCIPAL_PASSWORD }} >> .env
        docker compose \
          --file ${{ inputs.DOCKER_COMPOSE_FILE }} \
          --env-file .env \
          exec azure \
            az login --tenant $TENANT \
              --service-principal \
                --username $SERVICE_PRINCIPAL_ID \
                --password $SERVICE_PRINCIPAL_PASSWORD

    - name: Apply infrastructure changes
      shell: bash
      run: |
        touch .env
        PARAMETERS_FILE=${{ inputs.PARAMETERS_FILE }}
        docker compose \
          --file ${{ inputs.DOCKER_COMPOSE_FILE }} \
          exec azure \
            ./provision-quick.sh $PARAMETERS_FILE