name: ''
description: ''
inputs:
  TENANT:
    required: true
    description: ""
  SERVICE_PRINCIPAL_ID:
    required: true
    description: ""
  SERVICE_PRINCIPAL_PASSWORD:
    required: true
    description: ""
  RESOURCE_GROUP:
    required: true
    description: ""
  CONTAINER_APP:
    required: true
    description: ""
  CONTAINER_REGISTRY:
    required: true
    description: ""
  MULTI_REVISION:
    required: false
    default: "false"
    description: ""

runs:
  using: "composite"
  steps:
    - name: Log into Azure CLI
      shell: bash
      run: |
        echo Logging into Azure...
        az login \
          --tenant ${{ inputs.TENANT }} \
          --service-principal \
          --username '${{ inputs.SERVICE_PRINCIPAL_ID }}' \
          --password '${{ inputs.SERVICE_PRINCIPAL_PASSWORD }}'

    - name: Install Azure CLI containerapp extension
      shell: bash
      run: |
        az config set extension.use_dynamic_install=yes_without_prompt
        az extension add --name containerapp

    - name: Create new revision of PHP-FPM Container App
      shell: bash
      run: |
        echo Creating new revision of PHP-FPM container...
        az containerapp revision copy \
          --resource-group ${{ inputs.RESOURCE_GROUP }} \
          --name ${{ inputs.PHP_FPM_CONTAINER_APP }} \
          --image ${{ inputs.CONTAINER_REGISTRY }}/${{ inputs.PHP_FPM_IMAGE }}:${{ github.run_id }} \
          --revision-suffix run-${{ github.run_id }}

    - name: If using a multi-revision setup, ensure that 100% of traffic is set to the latest...
      shell: bash
      if: ${{ inputs.MULTI_REVISION }}
      run: |
        echo Ensuring 100% of traffic is set to the latest revision...
        az containerapp ingress traffic set \
          --resource-group ${{ inputs.RESOURCE_GROUP }} \
          --name ${{ inputs.PHP_FPM_CONTAINER_APP }} \
          --revision-weight latest=100